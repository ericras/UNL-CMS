<?php

/**
 * @file
 * Provides consolidated management of third-party Composer-compatible packages
 * required by contributed modules.
 */

/**
 * Implements hook_menu().
 */
function composer_manager_menu() {
  $items = array();

  $items['admin/config/system/composer-manager'] = array(
    'title' => 'Composer Manager',
    'description' => 'Configure the composer file and vendor directories.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('composer_manager_settings_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'composer_manager.admin.inc',
  );

  $items['admin/config/system/composer-manager/settings'] = array(
    'title' => 'Settings',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );

  $items['admin/config/system/composer-manager/packages'] = array(
    'title' => 'Packages',
    'description' => 'Select the search engine type being connected to.',
    'page callback' => 'composer_manager_packages_page',
    'access arguments' => array('administer site configuration'),
    'file' => 'composer_manager.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Implements hook_modules_enabled().
 *
 * Scans all modules for composer.json files.
 */
function composer_manager_modules_enabled($modules) {
  if (variable_get('composer_manager_generate_file', 1)) {
    composer_manager_write_file();
  }
}

/**
 * Registers the autoloader for all third-party packages.
 */
function composer_manager_register_autoloader() {
  static $registered = FALSE;
  if (!$registered) {
    $registered = TRUE;
    require composer_manager_vendor_dir() . '/autoload.php';
  }
}

/**
 * Writes the consolidated composer.json file for all modules that require
 * third-party packages managed by Composer.
 *
 * @return bool
 */
function composer_manager_write_file() {
  require_once __DIR__ . '/composer_manager.writer.inc';
  try {
    $data = composer_manager_fetch_data();
    $json = composer_manager_build_json($data);
    if ($json) {
      $dir_uri = variable_get('composer_manager_file_dir', 'public://composer');
      composer_manager_put_file($dir_uri, $json);
    }
  }
  catch (\RuntimeException $e) {
    if (user_access('administer site configuration')) {
      drupal_set_message(t('Error writing composer.json file'), 'error');
    }
    watchdog_exception('composer_manager', $e);
    return FALSE;
  }
  return TRUE;
}

/**
 * Returns the path to the vendor directory.
 *
 * @return string
 */
function composer_manager_vendor_dir() {
  $vendor_dir = variable_get('composer_manager_vendor_dir', 'sites/all/libraries/composer');
  $is_absolute = (0 === strpos($vendor_dir, '/'));
  if (!$is_absolute) {
    $vendor_dir = DRUPAL_ROOT . '/' . $vendor_dir;
  }
  return $vendor_dir;
}
